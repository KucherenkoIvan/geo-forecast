# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3'

# Define services
services:
  # App Service
  app:
    # Configuration for building the docker image for the service
    build:
      context: ../../ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: ./build/package/Dockerfile
    ports:
      - "9038:9038" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    depends_on:
      - postgres
    environment: # Pass environment variables to the service
      # PostgreSQL
      PG_HOST: postgres
      PG_USER: postgres
      PG_DB: geoforecast
      PG_PASSWORD: changeme
      PG_PORT: 5432
      # Auth
      ACCEPT_KEYS: testandroidapp
      # Http
      RESTART_ATTEMPTS: 25
      LISTEN_PORT: 9038
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
  postgres:
    container_name: postgres
    image: postgres:14.8-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=5"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "temp_file_limit=128"
    environment:
      POSTGRES_DB: "geoforecast"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "changeme"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres -d geoforecast"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 100M
    networks:
      - backend

networks:
  backend:
volumes:
  postgres-data:
